{{- if .Values.monitoring.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: 'https://kubernetes.default.svc'
  project: argocd
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    chart: kube-prometheus-stack
    targetRevision: 43.2.0
#    repoURL: 'https://github.com/prometheus-community/helm-charts/'
#    targetRevision: HEAD
#    path: charts/kube-prometheus-stack
    helm:
      skipCrds: true
      values: |
        grafana:
          adminPassword: prom-operator
          ingress:
            enabled: true
            hosts:
            - "grafana.{{ .Values.domain }}"
        prometheus:
          ingress:
            enabled: true
            hosts:
            - "prometheus.{{ .Values.domain }}"
          customScrapeConfigs:
          - job_name: 'external-dns'
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            static_configs:
            - targets:
              - external-dns.external-dns:7979
          customScrapeConfigs:
          - job_name: 'python-rest-api'
            scrape_interval: 30s
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            static_configs:
            - targets:
              - python-rest-api.python-rest-api:5000

          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 5Gi
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PruneLast=false
{{- end }}
